service: graphdb-indexer
frameworkVersion: '3'
provider:
  name: aws
  region: us-east-1
  runtime: nodejs18.x
  stage: ${opt:stage, 'development'}

  iam:
    role: IamRoleGraphLambdaExecution

  deploymentBucket:
   name: graphdb-driver-deployment-bucket-${self:provider.stage}
   skipPolicySetup: true

  # For now. comment out the VPC block for local development, we need to
  # move the infrastructure and this codebase into its own repository. 
  vpc:
    securityGroupIds:
      - ${cf:${self:provider.stage}.servicesSecurityGroupId}
    subnetIds: !Split [',', '${cf:${self:provider.stage}.subnetIds}']

  environment: ${file(./serverless-configs/env.yml):${self:provider.stage}}

configValidationMode: error

plugins:
  - serverless-esbuild
  - serverless-offline-sqs
  - serverless-offline  

package:
  individually: true

functions:
  bootstrapGremlinServer:
    timeout: 900
    handler: serverless/src/bootstrapGremlinServer/handler.default

  indexCmrCollections:
    timeout: 600
    handler: serverless/src/indexCmrCollections/handler.default
    events:
      - sqs:
          batchSize: 10
          arn:
            Fn::GetAtt:
              - CollectionIndexingQueue
              - Arn

resources:
  Resources: ${file(./serverless-configs/resources.yml):${self:provider.stage}}

custom:
  serverless-offline:
    reloadHandler: true
    useInProcess: true

  minifyBuild:
    development: false
    production: true

  esbuild:
    bundle: true
    loader:
      .graphql: text
      .gql: text
    minify: ${self:custom.minifyBuild.${self:provider.stage}}
    exclude:
      - '@aws-sdk/client-lambda'
      - '@aws-sdk/client-sqs'
      - '@@aws-sdk/client-ssm'
    watch:
      pattern: ['src/**/*.js']

  serverless-offline-sqs:
    autoCreate: true
    apiVersion: '2012-11-05'
    endpoint: http://0.0.0.0:9324
    region: us-east-1
    accessKeyId: root
    secretAccessKey: root
    skipCacheInvalidation: false